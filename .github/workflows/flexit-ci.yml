name: flexit-ci
on: push

jobs:
  pytest:
    strategy:
      fail-fast: true
      matrix:
        python-version: [ 3.10.2 ]
        poetry-version: [ 1.1.13 ]
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: pass
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v2
      - name: Set up python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Load cached Poetry installation
        uses: actions/cache@v3
        with:
          path: ~/.local
          key: poetry-1  # increment to reset cache
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          poetry-version: ${{ matrix.poetry-version }}
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction
      - name: Run tests
        run: |
          source .venv/bin/activate
          python -c 'from flexit.config import init_db; init_db(True)'
          pytest -v tests/
        env:
          DATABASE_URL: postgresql://postgres:pass@localhost/flexit_db
